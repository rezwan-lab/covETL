# -*- coding: utf-8 -*-
"""ETL_SARS-CoV-2_Surveillance.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/10KNwEQQ1Q3IkTgr8PDTSdBy_8xNJzqfc

# **install_packages**

# New section

# New section

install_most_neccessary_pachages
"""

import pandas as pd
import numpy as np

"""install_packages_for_figure_generation"""

import seaborn as sns
import matplotlib.pyplot as plt

"""# **data_upload**

mount_gdrive
"""

from google.colab import drive
drive.mount('/content/drive')

"""import_file

if_file_in_tsv_format
"""

df = pd.read_table("/content/drive/MyDrive/LongReport_WeeklyAnalysis/WA19/nextstrain_metadata_01092021.tsv", sep='\t')

"""if_file_in_csv_format"""



"""# **data_clean**

delete_unnessary_columns_change_in_dataset
"""

df.drop([ 'virus','gisaid_epi_isl', 'genbank_accession', 'region', 'region_exposure', 'country_exposure', 'division_exposure', 'segment', 'length', 'host', 'originating_lab', 'authors', 'url',
       'title', 'paper_url', 'date_submitted', 'purpose_of_sequencing', 'lab_id', 'totalInsertions', 'totalMissing', 'totalNonACGTNs', 'nonACGTNs', 'substitutions',
       'deletions', 'scorpio_call', 'note', 'pangoLEARN_version'], axis=1, inplace=True)
df.head(2)

"""delete_unnessary_columns_change_without_dataset"""

#delete unnessary columns
df_seq_ana1=df.drop([ 'country', 'age','sex','submitting_lab','last_vaccinated','clade','aaSubstitutions', 'aaDeletions'], axis=1)
df_seq_ana1.head(2)



"""# Lineage_Name_Change

copy column
"""

df.assign(sen=df.sex)

"""Alpha"""

df['lineage'].replace(['B.1.1.7', 'Q.1', 'Q.2', 'Q.3', 'Q.4', 'Q.5', 'Q.6', 'Q.7', 'Q.8'], ['Alpha', 'Alpha', 'Alpha', 'Alpha', 'Alpha', 'Alpha', 'Alpha', 'Alpha', 'Alpha'], inplace = True)

"""Delta"""

df['lineage'].replace(['B.1.617.2', 'AY.1', 'AY.2', 'AY.3', 'AY.3.1', 'AY.4', 'AY.5', 'AY.5.1', 'AY.5.2', 'AY.6', 'AY.7', 'AY.7.1', 'AY.7.2', 'AY.8', 'AY.9', 'AY.10', 'AY.11', 'AY.12', 'AY.13', 'AY.14', 'AY.15', 'AY.16', 'AY.17', 'AY.18', 'AY.19', 'AY.20', 'AY.21', 'AY.22', 'AY.23', 'AY.24', 'AY.25', 'AY.26', 'AY.27', 'AY.28', 'AY.29', 'AY.30', 'AY.31', 'AY.32', 'AY.33'], ['Delta','Delta', 'Delta','Delta','Delta','Delta','Delta','Delta','Delta','Delta','Delta','Delta','Delta','Delta','Delta','Delta','Delta','Delta','Delta','Delta','Delta','Delta','Delta','Delta','Delta','Delta','Delta','Delta','Delta','Delta','Delta','Delta','Delta','Delta','Delta','Delta','Delta','Delta','Delta'], inplace = True)

"""Gamma to Mu"""

df['lineage'].replace(['B.1.351 ', 'P.1', 'B.1.525', 'B.1.526', 'B.1.617.1', 'C.37', 'B.1.621'], ['Beta', 'Gamma', 'Eta', 'Iota', 'Kappa', 'Lambda', 'Mu'], inplace = True)

"""Monitoring"""

df['lineage'].replace(['B.1.427', 'B.1.429', 'R.1', 'B.1.466.2', 'B.1.1.318', 'B.1.1.519', 'C.36.3', 'B.1.214.2', 'B.1.1.523', 'B.1.619', 'B.1.620', 'C.1.2'], ['Monitoring', 'Monitoring', 'Monitoring', 'Monitoring', 'Monitoring', 'Monitoring', 'Monitoring', 'Monitoring', 'Monitoring', 'Monitoring', 'Monitoring', 'Monitoring'], inplace = True)

"""Variant rename"""

df['lineage'].replace(['Alpha', 'Beta', 'Gamma', 'Delta', 'Eta', 'Iota', 'Kappa', 'Lambda', 'Mu'], ['VOC', 'VOC', 'VOC', 'VOC', 'VOI', 'VOI', 'VOI', 'VOI', 'VOI'], inplace = True)

"""other"""

df.loc[df['lineage'] == 'Delta', 'Status'] = 'VOC'
df.loc[df['lineage'] != 'Delta', 'Status'] = 'Other'

"""or"""

df['Status'] = df['lineage'].apply(lambda x: 'Delta' if x == 'B.1.617.2'  else 'other')
df.head(50)

df.loc[(df['lineage'] == 'B.1.617.2') | (df['lineage'] == 'B.1.36') | (df['lineage'] == 'B.1.537'), 'Status'] = 'Delta'
df.loc[(df['lineage'] != 'B.1.617.2') & (df['lineage'] != 'B.1.36') & (df['lineage'] != 'B.1.537'), 'Status'] = 'Other'

df.loc[df['lineage'] == 'B.1.617.2', 'Status'] = 'Delta'
df.loc[df['lineage'] == 'B.1.36', 'Status'] = 'Gamma'
df.loc[df['lineage'] == 'B.1.537', 'Status'] = 'Alpha'
df.loc[(df['lineage'] != 'B.1.617.2') & (df['lineage'] != 'B.1.36') & (df['lineage'] != 'B.1.537'), 'Status'] = 'Other'

"""# date_format_change"""

df_seq_ana1["date"] = pd.to_datetime(df_seq_ana1["date"])
df_seq_ana1["year"] = df_seq_ana1["date"].dt.year
df_seq_ana1["month"] = df_seq_ana1["date"].dt.month
df_seq_ana1["day"] = df_seq_ana1["date"].dt.day
df_seq_ana1.head(2)

"""#Amino Acid Explode"""

df['aaSubstitutions']=df['aaSubstitutions'].map(str)
df['aaSubstitutions'] = df['aaSubstitutions'].str.split(',')
mut1 = df.explode('aaSubstitutions')
mut1 = df.explode('aaSubstitutions')
mut1.head(1)

mut1[['gene', 'aaMutations']] = mut1['aaSubstitutions'].str.split(':', expand=True)
mut1.head(1)



S_gene=mut2[mut2['gene'] == 'S']
S_gene.head(1)

"""if else condition

https://datascience.stackexchange.com/questions/58232/conditional-statement-to-update-columns-based-on-range

https://datatofish.com/if-condition-in-pandas-dataframe/
"""





"""# Amino Acid Split"""

result = pd.read_csv('i_have.csv')
mutation = result['aaMutations'].str.split('(\d+)([A-Za-z]+)', expand=True)
mutation_split = pd.concat([result, mutation], axis=1, join='inner')
mutation_split.rename(columns={0:'RefAA', 1:'Position', 2:'AltAA'}, inplace=True)
mutation_split.drop(3, axis=1, inplace=True)
mutation_split.to_csv('Mutation_split.csv', index=False)
result2 = pd.read_csv('Mutation_split.csv')





"""# Mutation Split"""

mut2 = mut1['aaMutations'].str.split('(\d+)([A-Za-z]+)', expand=True)
mut3 = pd.concat([mut1, mut2], axis=1, join='inner')
mut3.rename(columns={0:'RefAA', 1:'Position', 2:'AltAA'}, inplace=True)
mut3.drop(3, axis=1, inplace=True)
mut3.head(2)

#if else condition

mut3.loc[mut3['Position'] <= 15, 'Domian'] = 'S1'
mut3.loc[(mut3['Position'] >= 16) & (mut3['Position'] <= 305) , 'Domian'] = 'NTD'
mut3.loc[(mut3['Position'] >= 306) & (mut3['Position'] <= 329) , 'Domian'] = 'S1.1'
mut3.loc[(mut3['Position'] >= 330) & (mut3['Position'] <= 521) , 'Domian'] = 'RBD'
mut3.loc[(mut3['Position'] >= 522) & (mut3['Position'] <= 681) , 'Domian'] = 'S1/S2'
mut3.loc[(mut3['Position'] >= 682) & (mut3['Position'] <= 814) , 'Domian'] = 'S2.1'
mut3.loc[(mut3['Position'] >= 815) & (mut3['Position'] <= 833) , 'Domian'] = 'FP'
mut3.loc[(mut3['Position'] >= 834) & (mut3['Position'] <= 911) , 'Domian'] = 'S2.2'
mut3.loc[(mut3['Position'] >= 912) & (mut3['Position'] <= 985) , 'Domian'] = 'HR1'
mut3.loc[(mut3['Position'] >= 986) & (mut3['Position'] <= 1035) , 'Domian'] = 'CH'
mut3.loc[(mut3['Position'] >= 1036) & (mut3['Position'] <= 1075) , 'Domian'] = 'S2.3'
mut3.loc[(mut3['Position'] >= 1076) & (mut3['Position'] <= 1141) , 'Domian'] = 'CD'
mut3.loc[mut3['Position'] > 1142, 'Domian'] = 'S2'

"""# Extra"""

#showing data type
mut3.dtypes

#convert number to number in float data
mut3["Position"] = pd.to_numeric(mut3["Position"])

#convert string into intejar
mut3["Position"] = pd.to_numeric(mut3["Position"])

#add new collumn with specific value
mut3['count']=1